apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'whatsapp-clone-production'
        region: 'ap-southeast-1'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        scrape_interval: 5s

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes (kubelet)
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes cadvisor
      - job_name: 'kubernetes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # WhatsApp Clone application pods
      - job_name: 'whatsapp-clone-web'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
        scrape_interval: 10s
        metrics_path: /metrics

      # Nginx ingress controller
      - job_name: 'nginx-ingress'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: ingress-nginx
          - source_labels: [__address__]
            action: replace
            regex: ([^:]+)(?::\d+)?
            replacement: $1:10254
            target_label: __address__
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: instance

      # Node Exporter
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_endpoints_name]
            action: keep
            regex: node-exporter
          - source_labels: [__meta_kubernetes_endpoint_address_target_name]
            action: replace
            target_label: instance

      # kube-state-metrics
      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: kube-state-metrics
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http-metrics

      # External services monitoring
      - job_name: 'supabase-health'
        static_configs:
          - targets:
            - 'your-singapore-project.supabase.co:443'
            - 'your-japan-project.supabase.co:443'
        metrics_path: /rest/v1/health
        scheme: https
        scrape_interval: 30s
        scrape_timeout: 10s

      # LiveKit monitoring
      - job_name: 'livekit'
        static_configs:
          - targets:
            - 'whatsappclone-sg.livekit.cloud:443'
            - 'whatsappclone-jp.livekit.cloud:443'
        scheme: https
        scrape_interval: 30s
        scrape_timeout: 10s

      # CloudWatch exporter for AWS services
      - job_name: 'cloudwatch-exporter'
        static_configs:
          - targets: ['prometheus-cloudwatch-exporter:9106']
        scrape_interval: 60s

  recording-rules.yml: |
    groups:
    - name: whatsapp_clone.rules
      interval: 30s
      rules:
      # Request rate
      - record: whatsapp_clone:http_requests_per_second
        expr: rate(nginx_ingress_controller_requests_total[5m])
      
      # Error rate
      - record: whatsapp_clone:http_error_rate
        expr: rate(nginx_ingress_controller_requests_total{status=~"5.."}[5m]) / rate(nginx_ingress_controller_requests_total[5m])
      
      # Response time percentiles
      - record: whatsapp_clone:http_request_duration_p95
        expr: histogram_quantile(0.95, rate(nginx_ingress_controller_request_duration_seconds_bucket[5m]))
      
      # Pod CPU usage
      - record: whatsapp_clone:pod_cpu_usage
        expr: rate(container_cpu_usage_seconds_total{pod=~"whatsapp-clone-web-.*"}[5m])
      
      # Pod memory usage
      - record: whatsapp_clone:pod_memory_usage
        expr: container_memory_usage_bytes{pod=~"whatsapp-clone-web-.*"}
      
      # Database connection pool
      - record: whatsapp_clone:db_connections_active
        expr: pg_stat_database_numbackends{datname="whatsappclone"}

  alerting-rules.yml: |
    groups:
    - name: whatsapp_clone.alerts
      rules:
      # High error rate
      - alert: HighErrorRate
        expr: whatsapp_clone:http_error_rate > 0.05
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes"
      
      # High response time
      - alert: HighResponseTime
        expr: whatsapp_clone:http_request_duration_p95 > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s"
      
      # Pod memory usage
      - alert: PodMemoryUsageHigh
        expr: whatsapp_clone:pod_memory_usage / (1024*1024*1024) > 0.4
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Pod memory usage is high"
          description: "Pod {{ $labels.pod }} memory usage is {{ $value | humanize }}GB"
      
      # Pod CPU usage
      - alert: PodCPUUsageHigh
        expr: whatsapp_clone:pod_cpu_usage > 0.8
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Pod CPU usage is high"
          description: "Pod {{ $labels.pod }} CPU usage is {{ $value | humanizePercentage }}"
      
      # Database connection pool
      - alert: DatabaseConnectionPoolHigh
        expr: whatsapp_clone:db_connections_active > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Database connection pool usage is high"
          description: "Active database connections: {{ $value }}"
      
      # Pod restart rate
      - alert: PodRestartHigh
        expr: increase(kube_pod_container_status_restarts_total{pod=~"whatsapp-clone-web-.*"}[1h]) > 5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Pod restart rate is high"
          description: "Pod {{ $labels.pod }} has restarted {{ $value }} times in the last hour"
      
      # Service down
      - alert: ServiceDown
        expr: up{job="whatsapp-clone-web"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "WhatsApp Clone service is down"
          description: "Service {{ $labels.instance }} has been down for more than 1 minute"
      
      # External service health
      - alert: SupabaseDown
        expr: up{job="supabase-health"} == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Supabase is down"
          description: "Supabase instance {{ $labels.instance }} has been down for more than 2 minutes"
      
      # LiveKit service health
      - alert: LiveKitDown
        expr: up{job="livekit"} == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "LiveKit is down"
          description: "LiveKit instance {{ $labels.instance }} has been down for more than 2 minutes"